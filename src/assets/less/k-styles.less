@import '../../assets/less/variables.less';
@import '../../assets/less/mixins.less';

// THIS FILE CONTAINS STYLES THAT WILL BE REUSED THROUGHOUT THE WEBSITE



.main-container{
    height: 100vh;
    color: @white-color;
}
.overlay{
    height: 100%;
    width: 100%;
    padding-top: 4em;
    background-color: @overlay-color;
}

.mini-section{
    border-top: 1px solid @white-color;
    background-color: @dark-blue1;
    color: @white-color;
    
    padding: 2em;
    button{
        margin: 1em;
    }
}

.section-button{
    font-size: 1.5em;
    padding: .5em 2em;
    border-radius: 50px;
    background-color: transparent;
    color: @white-color;
    border: @white-color 1px solid;
    // Rules to make background slide in from right
    .slide-from-left(transparent, @white-color);
    .setTransition(.4s);
    &:hover{
        .setTransition(.4s);
        color: @dark-blue1;
        background-position: bottom left;
    }
}

/* PARALLAX STYLES= */

.parallax-wrapper {
    /* The height needs to be set to a fixed value for the effect to work.
        * 100vh is the full height of the viewport. */
    height: 100vh;
    /* The scaling of the images would add a horizontal scrollbar, so disable x overflow. */
    overflow-x: hidden;
    /* Enable scrolling on the page. */
    overflow-y: auto;
    /* Set the perspective to 2px. This is essentailly the simulated distance from the viewport to transformed objects.*/
    perspective: 2px;
}


.parallax-section {
    /* Needed for children to be absolutely positioned relative to the parent. */
    position: relative;
    /* The height of the container. Must be set, but it doesn't really matter what the value is. */
    height: 100vh;

    /* For text formatting. */
    display: flex;
    align-items: center;
    justify-content: center;
    color: white;
}

.parallax::after {
    /* Display and position the pseudo-element */
    content: " ";
    position: absolute;
    top: 0;
    right: 0;
    bottom: 0;
    left: 0;

    /* Move the pseudo-element back away from the camera,
        * then scale it back up to fill the viewport.
        * Because the pseudo-element is further away, it appears to move more slowly, like in real life. */
    transform: translateZ(-1px) scale(1.5);
    /* Force the background image to fill the whole element. */
    background-size: 100%;
    /* Keep the image from overlapping sibling elements. */
    z-index: -1;
}